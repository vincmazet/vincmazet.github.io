/*
    COPYRIGHT
*/

/*
  Remarques :
  - effectivement, écrire un texte directement sur le canvas ne permet pas de le
  traduire ensuite avec MathJax
*/

window.onload = function ()
{  
    // Animation
    var anim = cherchediv('sinus', 350, 400);
    
    // Graphes
    var gb = new graph(anim, 0, 0, 350, 200);
    var gf = new graph(anim, 10, 10, 350, 200);
    
    // Etiquettes
    var lx = label(anim, '\\(t\\)', 350, 100);
    var ly = label(anim, '\\(x(t)\\)', 175, 0);
    
    // Bouton
    //var b1 = bouton(anim, 'coucou', 30, 30);
    
    // Paramètres
    var a = 1;              // Amplitude de la sinusoïde
    var f = 1;              // Fréquence de la sinusoïde
    var p = 0;              // Phase de la sinusoïde
    var N = 300;            // Nombre de points du signal
    var xmax = 5;           // Valeur extrême des abscisses
    var ymax = 3;           // Valeur extrême des ordonnées
    
    // Affiche la sinusoïde
    var n, t = [], y = [];
    for(n = 0; n < N; n++)
    {
        t[n] = n;//n/N*2*xmax - xmax;
        y[n] = n;//;a * Math.sin( 2 * Math.PI * f * t[n] + p );
    }
    //ctx.lineWidth = 2;
    //ctx.strokeStyle = '#0020e0';
    //gf.plot(t,y);
}




/*{
    // Canvas & contexte
    var cnv = document.getElementById("sinus");
    var ctx = cnv.getContext("2d");
    
    // Evite la sélection lors d'un double clic    
    cnv.onselectstart = function () { return false; }
    
    // Taille du Canvas 
    cw = 350;
    ch = 200;
    
    // Hack pour les écrans haute définition (Retina, ...)
    cnv.width = cw*2;
    cnv.height = ch*2;
    cnv.style.width = cw + 'px';
    cnv.style.height = ch + 'px';
    //ctx.scale(1,1);
    
    // Paramètres
    var a = 1;              // Amplitude de la sinusoïde
    var f = 1;              // Fréquence de la sinusoïde
    var p = 0;              // Phase de la sinusoïde
    var I = 300;            // Nombre de points du signal
    var xmax = 5;           // Valeur extrême des abscisses
    var ymax = 3;           // Valeur extrême des ordonnées
    
    // Initialisation du graphique
    var g = new graph(ctx, 0, 0, cnv.width, cnv.height);
    g.xlim = [-xmax, xmax];
    g.ylim = [-ymax, ymax];
    
    // Évènements du slider "Amplitude"
    var aslider = document.getElementById("aslider");
    aslider.addEventListener('mousemove', draw, false);
    aslider.addEventListener('touchmove', draw, false);
    
    // Évènements du slider "Fréquence"
    var fslider = document.getElementById("fslider");
    fslider.addEventListener('mousemove', draw, false);
    fslider.addEventListener('touchmove', draw, false);
    
    // Évènements du slider "Phase"
    var pslider = document.getElementById("pslider");
    pslider.addEventListener('mousemove', draw, false);
    pslider.addEventListener('touchmove', draw, false);
    
    // Affichage
    function draw()
    {   
        // Efface le canvas
        clearCanvas(cnv,ctx)
    
        // Grille
        ctx.lineWidth = 1;
        ctx.strokeStyle = '#f0f0f0';
        g.xgrid(1,cnv.height,0);
        g.ygrid(1,cnv.width,0);
        
        // Axes
        ctx.strokeStyle = '#c0c0c0';
        g.axes();
        g.xgrid(0,0,0); g.ygrid(0,0,5);
        
        // Titres des axes
        ctx.fillStyle = '#c0c0c0';
        ctx.font = '200% MJX_Math';
        g.xtitle('t');
        g.ytitle(' x(t)');
        
        // Récupère les valeurs des sliders
        a = parseFloat(document.getElementById("aslider").value);
        f = parseFloat(document.getElementById("fslider").value);
        p = parseFloat(document.getElementById("pslider").value);
        
        // Arrondi les valeurs (bugs sur certains navigateurs)
        a = Math.round(a*10) / 10;
        f = Math.round(f*10) / 10;
        p = Math.round(p*10) / 10;
        
        // Met à jour les étiquettes
        document.getElementById("aval").innerHTML = a.toString().replace(".", ",");
        document.getElementById("fval").innerHTML = f.toString().replace(".", ",");
        document.getElementById("pval").innerHTML = p.toString().replace(".", ",");

        // Affiche la sinusoïde
        var i, t=[], y=[];
        for(i = 0; i < I; i++)
        {
            t[i] = i/I*2*xmax - xmax;
            y[i] = a * Math.sin( 2 * Math.PI * f * t[i] + p );
        }
        ctx.lineWidth = 2;
        ctx.strokeStyle = '#0020e0';
        g.plot(t,y);
    }
    
    // Affichage initial
    draw();
    
}*/
