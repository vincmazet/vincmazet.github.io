<html>

<!----------------------------------------------------------------------------->

<style>

#contain {
  border: 1px dashed black;
  position: relative;
  padding-left: 0;
  padding-right: 0;
  margin-left: auto;
  margin-right: auto;
  display: block;
}

</style>

<!----------------------------------------------------------------------------->

<body>

  <p>Salut la compagnie</p>
  
  <div id='contain'>
  </div>
  
  <p>Salut la compagnie</p>

</body>

<!----------------------------------------------------------------------------->

<script>

window.onload = function ()
{
  /* effectivement, Ã©crire un texte directement sur le canvas ne permet pas de le
  traduire ensuite avec MathJax */
  
    // Taille du div CONTAIN
    var contain = document.getElementById("contain");
    contain.style.width = '400px';
    contain.style.height = '500px';
    
    // canvas
    canv(50, 50, 100, 200, '#ff9999');
    c2 = canv(80, 80, 200, 100, '#99ff99');
    c2.style.border = '1px solid red';
    
    // Bouton
    btn(30,30,'coucou');
    
    // Etiquettes
    text('\\(x(t)\\)', 0, 0, 'blue', 'l');
    lbl2 = text('\\(h\\tau\\)', 100, 0, 'red', 'r');
    setInterval(function(){
        if (lbl2.style.color == 'green')
            { lbl2.innerHTML = 'coucou'; lbl2.style.color = 'red';}
        else
            { lbl2.innerHTML = '\\(h(\\tau=5)\\)'; MathJax.Hub.Queue(['Typeset',MathJax.Hub,lbl2]); lbl2.style.color = 'green'; }
    }, 1000);
    
    // graphes
    g1 = graphe(10, 230, 380, 260);
    
    setTimeout(zoubida, 2500);
        
    /*
    // Canvas de fond
    var cnvB = document.getElementById("backcanvas");
    var B = cnvB.getContext("2d");
    B.beginPath();
    B.moveTo(0, 0);
    B.lineTo(0, 200);
    B.lineTo(300, 200);
    B.lineTo(300, 0);
    B.lineTo(0, 0);
    B.moveTo(0, 100);
    B.lineTo(300, 100);
    B.moveTo(150, 0);
    B.lineTo(150, 200);
    B.stroke();
    
    // Canvas d'animation
    var cnvC = document.getElementById("frontcanvas");
    var C = cnvC.getContext("2d");
    
    // Etiquettes
    
    
    
    // Animation
    var i = 0, d = 1;
    function draw()
    {
        C.clearRect(0,0,cnvC.width,cnvC.height);
        i = i + d;
        C.beginPath();
        C.moveTo(i, 0);
        C.lineTo(i, 150);
        C.stroke();
        if (i == 100) {d = -1;}
        if (i == 0)   {d = +1;}
    }
    */
    
    /*#backcanvas {
  position: absolute;
  top: 0px;
  left: 0px;
  padding-left: 0;
  padding-right: 0;
  margin-left: auto;
  margin-right: auto;
  display: block;
}

#frontcanvas {
  position: absolute;
  top: 0px;
  left: 0px;
}*/
}

function zoubida()
{
    text('\\(\\tau\\)', 120, 0, 'blue', 'r');
}

// Bouton
function btn(x, y, t)
{
    var o = document.createElement('button');
    o.style.position = 'absolute';
    o.style.left = x + 'px';
    o.style.top = y + 'px';
    o.style.background = '#d0d0f0';
    var t = document.createTextNode("CLICK ME");
    o.appendChild(t);
    document.getElementById('contain').appendChild(o);
    return o;
}

// Canvas
function canv(x, y, w, h, c)
{
    var o = document.createElement('canvas');
    o.style.position = 'absolute';
    o.width = w;
    o.height = h;
    o.style.left = x + 'px';
    o.style.top = y + 'px';
    o.style.width = w + 'px';
    o.style.height = h + 'px';
    o.style.background = c;
    document.getElementById('contain').appendChild(o);
    return o;
}

// Graphe
function graphe(x, y, w, h)
{
    var g = canv(x, y, w, h, 'inherit');
    var c = g.getContext("2d");
    var i = 0;
    c.strokeStyle = '#c0c0c0';
    c.lineWidth = 1;
    c.beginPath();
    for(i=0;i<w;i=i+10)
    {
        c.moveTo(i+0.5,0);
        c.lineTo(i+0.5,h);
    }
    c.stroke();
    c.beginPath();
    for(i=0;i<h;i=i+10)
    {
        c.moveTo(0,i+0.5);
        c.lineTo(w,i+0.5);
    }
    c.stroke();
    return g;
}

// Etiquettes
function text(t, x, y, c, ha)
{
    var o = document.createElement('div');
    o.style.position = 'absolute';
    o.style.top = x + 'px';
    if (ha == 'l')      {o.style.left = y + 'px';}
    else if (ha == 'r') {o.style.right = y + 'px';}
    o.style.color = c;
    o.innerHTML = t;
    document.getElementById('contain').appendChild(o);
    
	MathJax.Hub.Queue(['Typeset',MathJax.Hub,o]); /* YOUPIE ! */
	/* http://docs.mathjax.org/en/latest/typeset.html */
	/* http://docs.mathjax.org/en/latest/api/hub.html */
    
    return o;
}

</script>

<script src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML" type="text/javascript"></script>
<!--<script type="text/javascript" src="js/makebigmaths.js"></script>-->

<!----------------------------------------------------------------------------->

</html>
